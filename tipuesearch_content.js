var tipuesearch = {"pages":[{"title":"Contributing","text":"Table of contents How to file a bug report How to contribute code How to write tests How to debug your test How to file a bug report If you have any suggestions for improvements please do not hesitate to open an issue . How to contribute code We encourage you to contribute new plugins. We use gerrithub for reviewing proposed changes. The submission process looking something like this: Clone the citellus repository: 1 git clone https://github.com/citellusorg/citellus.git Configure the git-review tool: 1 git-review -s Check out a branch in which to make your changes: 1 git checkout -b \"your-new-branch\" Edit your files and validate with tox: 1 tox # this will check the changes for some errors NOTE : tox will run python 2.7, pep8 and python 3.5 tests, if your environment lacks for example python 3.5, do execute tox -l to see the available tests and skip that one, for example: sh tox -e pep8 tox -e py27 # We're skipping tox -e py35 which is also invoked by default when tox is executed without arguments. In this way, errors that might be relevant to the test environment can be skipped. For example this one reported at issue tracker as 104 ) Update your local repository: 1 2 3 4 5 6 git add $ modified_files git commit For the message , please use a short line with the fix and the subject like ` [ plugins ][ openstack ][ nova ] Check nova configuration XXX ` If the commit fixes a github open issue , also use ` Closes #$ ISSUEID ` so github automatically closes it once merged referencing the commit . Submit your changes for review: 1 git-review Then wait for your changes to be reviewed. It is common for reviewers to request changes; when this happens: Edit your files and revalidate with tox: 1 tox # this will check the new changes for some errors Update your existing commit. Do not create a new commit! 1 2 git add $modified_files git commit --amend Resubmit the change: 1 git-review You can see pending and already merged actual changes at: https://review.gerrithub.io/#/q/project:citellusorg//citellus Once the new plugin has been submitted you'll see some comments from ‘Citellus Jenkins' which is running Unit tests against it (same ones that you run with tox ) If Jenkins gives ‘Verified +1', next step is wait for one reviewer to give final ACK and merge the change. How to write tests Please refer to the templates folder for examples. If you want to contribute also Unittests for your plugins, check TESTING .md For contributing translations check i18n.md How to debug your test We've included a file named env-for.debug.sh in the root folder of citellus repo that allows to be sourced and later execute your script. This environment file will define the standard variables Citellus does use like: RC_OKAY RC_FAILED RC_SKIPPED TEXTDOMAIN TEXTOMAINDIR CITELLUS_BASE CITELLUS_LIVE CITELLUS_ROOT And will preload the common-functions The way to use it is: 1 . ~/citellus/env-for-debug.sh Then you can debug your script with: 1 sh -x /path/to/your/plugin.sh Or test individual functions output like: 1 is_rpm qemu-kvm-rhev Please, do note that as some functions do ‘exit' or ‘return' for example executing is_rpm_over will exit the active shell, so beware!!","tags":"tech","url":"https://citellusorg.github.io/contributing/","loc":"https://citellusorg.github.io/contributing/"},{"title":"Timeline","text":"Table of contents Changelog hilights 2018-03-25 2018-03-18 2018-03-02 2018-02-17 2018-02-11 2018-01-27 2018-01-24 2018-01-22 2018-01-16 Citellus Magui Changelog hilights This file will contain a manually mantained log of hilights between versions, it's not a very extensive detail, but some of the bigger changes/ideas will be added here. Check What's new : tag for more updated information. 2018-03-25 Implement --find to citellus so that it can grep across a folder set for checking historic data for tests. 2018-03-18 Magui autogrouping support, generating files for each comparison set like osp roles, same hostname, etc. It's based on metadata plugins generated. Skip reexecution if a specified sosreport set was already analyzed. 2018-03-02 Implemented ‘faraday-exec' plugin to generate fake plugins that run and output metadata that later is faked via a datahook to be compared via magui plugins. Implemented automatic pypi.org package generation for each master merge that allows to run citellus installed via ‘pip' or ‘pipsi'. 2018-02-17 Implemented ‘profiles' data hook Allow to define a text file with include/exclude filter and description that grabs data from the obtained results and shows in one place all return codes and error messages received This will allow to define ‘healthchecks' based on other plugins output and generate them dinamycall. As it is done as if another plugin was executed, same Web UI interface is available for checking results. 2018-02-11 Several changes introduced recently: New plugins :) When running rerun, improved some of the logic to also copy over www so that it matches the version of the json file. Improved rerun, to only get results for missing plugins (unless forcerun used) Faraday can now accept bundle of files CSV in the list of files, it will mangle the extension reported name and description to match the file iterated. This allows one file to act over several FS files (for example, policy.json for several services). UT 's Some other UT tweaks to ensure plugins report no data to stdout, and ability to drop bunch of jsons to run that UT over them. We moved data to be a dictionary (instead of array of dictionaries), to better and faster filter on included plugins and others that are dependant on data generated (like Magui ones). UT to check for tests that were doing ‘echo $RC_' instead of ‘exit $RC_' Citellus www Now uses the generated ‘name' for plugins so we can tune it from the framework side. Also, auto switches to magui.json when no citellus.json exists, or shows a dropdown to select which one to show. 2018-01-27 DevConf.cz 2018 Detect pitfalls of osp deployments with citellus Recording at https://www.youtube.com/watch?v=SDzzqrUdn5A 2018-01-24 Faraday extension Some files must be equal or different across sosreports, actually we do have release and ceilometer-yaml one that rely on this, but this is hard to mantain as each new file will require a new plugin for Citellus plus a new plugin for Magui. In order to simplify this a new extension has been created so adding a new file to monitor no longer requires new plugins for citellus or magui but just creating a text file with some data within as documented on citellusclient/plugins/faraday/README.md 2018-01-22 Changed the way we work with sosreports for Citellus and Magui: Now all plugins are always executed and filters do act on the output only. If the folder is writable, citellus will write citellus.json to sosreport folder. If there's an existing citellus.json it will be loaded from disk and run skipped unless there are new plugins that require execution. Forcing execution can be indicated with parameter -r to both Magui and Citellus. 2018-01-16 Citellus New functions for bash scripts! We've created lot of functions to check different things: installed rpm rpm over specific version compare dates over X days regexp in file etc.. Functions do allow to do quicker plugin development. save/restore options so they can be loaded automatically for each execution Think of enabled filters, excluded, etc metadata added for plugins and returned as dictionary plugin has a unique ID for all installations based on plugin relative path and plugin name We do use that ID in magui to select the plugin data we'll be acting on plugin priority! Plugins are assigned a number between 0 and 1000 that represents how likely it's going to affect your environment, and you can filter also on it with --prio extended via ‘extensions' to provide support for other plugins moved prior plugins to be core extension ansible playbook support via ansible-playbook command metadata plugins that just generate metadata (hostname, date for sosreport, etc) Web Interface!! David Valee Delisle did a great job on preparing an html that loads citellus.json and shows it graphically. Thanks to his work, we did extended some other features like priority, categories, etc that are calculated via citellus and consumed via citellus-www. Interface can also load magui.json (with ?json=magui.json ) and show it's output. We did extend citellus to take --web to automatically create the json named citellus.json on the folder specified with -o and copy the citellus.html file there. So if you provide sosreports over http, you can point to citellus.html to see graphical status! (check latest image at citellus website as www.png ) Increased plugin count! Now we do have more than 119 across different categories A new plugin in python reboot.py that checks for unexpected reboots Spectre/Meltdown security checks! Magui If there's an existing citellus.json magui does load it to speed it up process across multiple sosreports. Magui can also use ansible-playbook to copy citellus program to remote host and run there the command, and bring back the generated citellus.json so you can quickly run citellus across several hosts without having to manually perform operations or generate sosreports. Moved prior data to two plugins: citellus-outputs Citellus plugins output arranged by plugin and sosreport citellus-metadata Outputs metadata gathered by metadata plugins in citellus arranged by plugin and sosreport First plugins that compare data received from citellus on global level Plugins are written in python and use each plugin id to just work on the data they know how to process pipeline-yaml Checks if pipeline.yaml and warns if is different across hosts seqno Checks latest galera seqno on hosts release Reports RHEL release across hosts and warns if is different across hosts Enable quiet mode on the data received from citellus as well as local plugins, so only outputs with ERROR or different output on sosreports is shown, even on magui plugins.","tags":"tech","url":"https://citellusorg.github.io/timeline/","loc":"https://citellusorg.github.io/timeline/"},{"title":"Citellus","text":"Table of contents Introduction Highlights Installation Usage help Plugins and their descriptions Doing a live check example Doing a fs snapshot check example HTML Interface Ansible playbooks Introduction Citellus is a program that should help with system configuration validation on either live system or any sort of snapshot of the filesystem. Via execution of ‘plugins' it reports status on each one execution against the system that gives you an idea on health status, actual problems or problems that will reveal themselves if no preventive action is taken. Please if you have any idea on any improvements please do not hesitate to open an issue. Highlights Plugins written in your language of choice. Allows to dump output to json file to be processed by other tools. Allow to visualize html from json output. Check our sample at: Citellus-www Ansible playbook support. Save / restore default settings Check latest changes on Changelog.md Check for plugins listing on citellusclient/plugins/ Installation Just clone the git repository and execute it from there ‘or' use ‘pipsi' or create a python virtual env to install package ‘citellus' sh # pipsi install citellus Already using interpreter /usr/bin/python3 Using base prefix '/usr' New python executable in /home/iranzo/.local/venvs/citellus/bin/python3 Also creating executable in /home/iranzo/.local/venvs/citellus/bin/python Installing setuptools, pip, wheel...done. Collecting citellus Installing collected packages: citellus Successfully installed citellus-0.1.0.dev1072 Linked script /home/iranzo/.local/bin/citellus.py Linked script /home/iranzo/.local/bin/magui.py Done. Pipsi will take care of installing a virtual environment and link to binary folder so you can call citellus.py or magui.py directly Remember that pypi package might not contain all the latests plugins features as the github repo one. Container: Use our automatically built container in docker hub: docker run --user=$(id -u) --rm -v $PATHTOSOSREPORT:/data:Z citellus/citellus:latest /data or build your own using the included Dockerfile in the git checkout. docker build . -f Dockerfile.centos7-atomic -t citellus:latest # (from git checkout, then note image id) docker run --user=$(id -u) --rm -v $PATHTOSOSREPORT:/data:Z citellus:latest /data Notes about using docker: Docker passes as volume the path specified under /data so we do use that parameter with citellus for running the tests. The default user id within the container is 10001 and the commands or sosreport permissions doesn't allow that user to gather all the information, so the container is required to run as the current user. Usage help We are developing framework in python, the bash framework has been deprecated. Python framework is the only supported framework. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 usage : citellus . py [ arguments ] [ -h ] [ -l ] [ --list-plugins ] [ --list-extensions ] [ --list-categories ] [ --description ] [ --list-hooks ] [ --output FILENAME ] [ --web ] [ --run ] [ --find ] [ --blame ] [ --lang ] [ --only-failed ] [ -v ] [ -d {INFO,DEBUG,WARNING,ERROR,CRITICAL} ] [ -q ] [ -i SUBSTRING ] [ -x SUBSTRING ] [ -p [0-1000 ] ] [ -hf SUBSTRING ] [ --dump-config ] [ --no-config ] [ sosreport ] Citellus allows to analyze a directory against common set of tests , useful for finding common configuration errors positional arguments : sosreport optional arguments : - h , -- help show this help message and exit - l , -- live Work on a live system instead of a snapshot -- list - plugins Print a list of discovered plugins and exit -- list - extensions Print a list of discovered extensions and exit -- list - categories With list - plugins , also print a list and count of discovered plugin categories -- description With list - plugins , also outputs plugin description -- list - hooks Print a list of discovered hooks and exit -- output FILENAME , - o FILENAME Write results to JSON file FILENAME -- web Write results to JSON file citellus . json and copy html interface in path defined in -- output -- run , - r Force run of citellus instead of reading existing 'citellus.json' -- find Use provided path at starting point for finding citellus . json and print them based on filters defined Output and logging options : -- blame Report time spent on each plugin -- lang Define locale to use -- only - failed , - F Only show failed tests - v , -- verbose Increase verbosity of output ( may be specified more than once ) - d { INFO , DEBUG , WARNING , ERROR , CRITICAL } , -- loglevel { INFO , DEBUG , WARNING , ERROR , CRITICAL } Set log level - q , -- quiet Enable quiet mode Filtering options : - i SUBSTRING , -- include SUBSTRING Only include plugins that contain substring - x SUBSTRING , -- exclude SUBSTRING Exclude plugins that contain substring - p [ 0-1000 ] , -- prio [ 0-1000 ] Only include plugins are equal or above specified prio - hf SUBSTRING , -- hfilter SUBSTRING Only include hooks that contain substring Config options : -- dump - config Dump config to console to be saved into file -- no - config Do not read configuration from file / home / iranzo / DEVEL / citellus / citellusclient / citellus . conf or ~/ . citellus . conf Check how does it look in an execution at: Plugins and their descriptions This is new feature of citellus that will show you available scripts and their description. 1 2 3 4 5 6 7 8 9 . / citellus . py -- list - plugins -- description { ' backend ' : ' core ' , ' description ' : ' This plugin checks if Apache reaches its MaxRequestWorkers ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/httpd/1406417.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks missconfigured host in nova vs hostname ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/ceilometer/1483456.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks for outdated ceph packages ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/ceph/1358697.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks httpd WSGIApplication defined to avoid wrong redirection ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/httpd/1478042.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks for keystone transaction errors on cleanup ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/keystone/1473713.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks for keystone LDAP domain template problem ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/keystone/templates/1519057.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks for wrong auth_url configuration in metadata_agent.ini ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron/1340001.sh ' } { ' backend ' : ' core ' , ' description ' : ' Checks python-ryu tracebacks ' , ' plugin ' : ' /home/iranzo/DEVEL/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron/1450223.sh ' } Doing a live check example This is an example of execution of Citellus using all openstack and pacemaker tests collections. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ./citellus.py -q -l -i pacemaker -i openstack INFO:citellus:using default plugin path # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/ceilometer_bug_1483456.sh: failed https://bugzilla.redhat.com/show_bug.cgi?id=1483456 # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/ceph_bug_1358697.sh: failed outdated ceph packages: https://bugzilla.redhat.com/show_bug.cgi?id=1358697 # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/httpd_bug_1478042.sh: skipped # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/keystone_bug_1473713.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1450223.sh: skipped # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1474092.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1489066.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/nova_bug_1474092.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/swift_bug_1500607.sh: failed swift expirer https://bugzilla.redhat.com/show_bug.cgi?id=1500607 # /root/citellus/citellusclient/plugins/core/launchpad/openstack/keystone_bug_1649616.sh: okay # /root/citellus/citellusclient/plugins/core/openstack/ceilometer/expiration.sh: failed ceilometer.conf setting must be updated: alarm_history_time_to_live = -1 ceilometer.conf setting must be updated: event_time_to_live = -1 ceilometer.conf setting must be updated: metering_time_to_live = -1 Doing a fs snapshot check example This is an example of execution of Citellus using pacemaker and openstack filter against fs snapshot. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ./citellus.py -q -i pacemaker -i openstack sosreport-undercloud-0.redhat.local-20171117212710/ INFO:citellus:using default plugin path # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/ceilometer_bug_1483456.sh: failed https://bugzilla.redhat.com/show_bug.cgi?id=1483456 # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/ceph_bug_1358697.sh: failed outdated ceph packages: https://bugzilla.redhat.com/show_bug.cgi?id=1358697 # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/httpd_bug_1478042.sh: skipped # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/keystone_bug_1473713.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1450223.sh: skipped # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1474092.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/neutron_bug_1489066.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/nova_bug_1474092.sh: okay # /root/citellus/citellusclient/plugins/core/bugzilla/openstack/swift_bug_1500607.sh: failed swift expirer https://bugzilla.redhat.com/show_bug.cgi?id=1500607 # /root/citellus/citellusclient/plugins/core/launchpad/openstack/keystone_bug_1649616.sh: okay # /root/citellus/citellusclient/plugins/core/openstack/ceilometer/expiration.sh: failed ceilometer.conf setting must be updated: alarm_history_time_to_live = -1 ceilometer.conf setting must be updated: event_time_to_live = -1 ceilometer.conf setting must be updated: metering_time_to_live = -1 HTML Interface Create by using --output $FOLDER and --web , open the generated citellus.html . Citellus-web now supports the parsing of magui.json. It's possible to tell the citellus.html which json to parse by adding json= as a query string: 1 http://host/citellus.html?json=magui.json Ansible playbooks Citellus can also run Ansible playbooks via extension The are some additional conventions that are detailed in ansible-playbooks.md that determine how to code them to be executed in live or snapshoot mode. Commands have been extended to allow --list-plugins to list them and include /exclude filters to work with them. All of them must end in .yml . 1 2 3 4 5 found #1 extensions / found #0 tests at default path mode : fs snapshot . # Running extension ansible - playbook # / home / iranzo / DEVEL / citellus / citellus / playbooks / system / clock - ntpstat . yml : skipped Skipped for incompatible operating mode vs 1 2 3 4 5 found #2 extensions with #2 plugins mode: live # /home/iranzo/DEVEL/citellus/citellusclient/plugins/ansible/openstack/rabbitmq/ha-policies.yml: okay # /home/iranzo/DEVEL/citellus/citellusclient/plugins/ansible/system/clock-ntpstat.yml: failed {\"changed\": false, \"cmd\": \"ntpstat\", \"msg\": \"[Errno 2] No such file or directory\",","tags":"tech","url":"https://citellusorg.github.io/citellus/","loc":"https://citellusorg.github.io/citellus/"},{"title":"Magui","text":"Table of contents 1 2 3 4 5 6 7 - [ Introduction ]( # introduction ) - [ Highlights ]( # highlights ) - [ Installation ]( # installation ) - [ Usage help ]( # usage - help ) - [ Running a check ]( # running - a - check ) - [ Running a check against remote hosts ]( # running - a - check - against - remote - hosts ) - [ Autogrouping ]( # autogrouping ) Plugin development for Magui Introduction Magui is a wrapper that calls functions from the Python library of Citellus README . Some problems are not detected only on one node, but are made by the aggregation of data across them, for example: ntp sync galera replication status etc RHEL release differences Magui aims to use Citellus for gathering the data and later, write plugins to analyze that information. Highlights Reuse saved citellus.json to speed up analisys on several files, retrigger if inconsistencies Plugins use uuid to identify plugin properly and act on them. Allows to get data from remote hosts with ansible-playbook Autogrouping: based on metadata plugin, runs comparisons against sets of host roles, hostnames, etc for better spotting issues across systems. Web interface using citellus.html?json=magui.json Check latest changes on Installation Just clone the git repository and execute it from there ‘or' use ‘pipsi' or create a python virtual env to install package ‘citellus' sh # pipsi install citellus Already using interpreter /usr/bin/python3 Using base prefix '/usr' New python executable in /home/iranzo/.local/venvs/citellus/bin/python3 Also creating executable in /home/iranzo/.local/venvs/citellus/bin/python Installing setuptools, pip, wheel...done. Collecting citellus Installing collected packages: citellus Successfully installed citellus-0.1.0.dev1072 Linked script /home/iranzo/.local/bin/citellus.py Linked script /home/iranzo/.local/bin/magui.py Done. Pipsi will take care of installing a virtual environment and link to binary folder so you can call citellus.py or magui.py directly Remember that pypi package might not contain all the latests plugins features as the github repo one. Container: Use our automatically built container in docker hub: docker run --user=$(id -u) --rm -v $PATHTOSOSREPORT:/data:Z citellus/citellus:latest /data --entrypoint=\"magui.py\" or build your own using the included Dockerfile in the git checkout. docker build . -f Dockerfile.centos7-atomic -t citellus:latest # (from git checkout, then note image id) docker run --user=$(id -u) --rm -v $PATHTOSOSREPORT:/data:Z citellus:latest /data --entrypoint=\"magui.py\" Notes about using docker: Docker passes as volume the path specified under /data so we do use that parameter with citellus for running the tests. The default user id within the container is 10001 and the commands or sosreport permissions doesn't allow that user to gather all the information, so the container is required to run as the current user. Usage help Plugins for Magui are to be written in Python, check next section for details. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 usage : magui . py [ arguments ] [ -h ] [ -d {INFO,DEBUG,WARNING,ERROR,CRITICAL} ] [ --list-plugins ] [ --description ] [ -m MPATH ] [ --output FILENAME ] [ --run ] [ --hosts hosts ] [ -q ] [ -i SUBSTRING ] [ -x SUBSTRING ] [ -p [0-1000 ] ] [ -mf MFILTER ] [ --lang ] [ sosreports [sosreports ... ] ] Processes several generic archives / sosreports scripts in a uniform way , to interpret status that depend on several systems data positional arguments : sosreports optional arguments : - h , -- help show this help message and exit - d { INFO , DEBUG , WARNING , ERROR , CRITICAL } , -- loglevel { INFO , DEBUG , WARNING , ERROR , CRITICAL } Set log level -- list - plugins Print a list of discovered Magui plugins and exit -- description With list - plugins , also outputs plugin description - m MPATH , -- mpath MPATH Set path for Magui plugin location if not default -- output FILENAME , - o FILENAME Write results to JSON file FILENAME -- run , - r Force run of citellus instead of reading existing 'citellus.json' -- hosts hosts Gather data via ansible from remote hosts to process . Filtering options : - q , -- quiet Enable quiet mode - i SUBSTRING , -- include SUBSTRING Only include plugins that contain substring - x SUBSTRING , -- exclude SUBSTRING Exclude plugins that contain substring - p [ 0-1000 ] , -- prio [ 0-1000 ] Only include plugins are equal or above specified prio - mf MFILTER , -- mfilter MFILTER Only include Magui plugins that contains in full path that substring --lang Define locale to use Magui can be executed using the citellus docker image as well, by modifying the entrypoint: In a directory structure as: 1 2 3 4 /path/to/my/sosreports/ ├── sosreport-overcloud-controller-0 ├── sosreport-overcloud-controller-1 └── sosreport-overcloud-controller-2 docker run --user=$(id -u) --rm --entrypoint=\"magui.py\" -v /path/to/my/sosreports/:/data:Z citellus:latest -q /data/sosreport-overcloud-controller-0/ /data/sosreport-overcloud-controller-1/ /data/sosreport-overcloud-controller-2/ Running a check This is an example of execution of Magui against a set of sosreports with seqno plugin of Citellus enabled. 1 2 3 4 5 6 7 8 9 10 11 12 #magui.py * -i seqno # (filtering for ‘seqno' plugins. { '/home/remote/piranzo/citellus/citellus/plugins/openstack/mysql/seqno.sh' : { 'ctrl0.localdomain' : { 'err' : '08a94e67-bae0-11e6-8239-9a6188749d23:36117633\\n' , 'out' : '' , 'rc' : 0 } , 'ctrl1.localdomain' : { 'err' : '08a94e67-bae0-11e6-8239-9a6188749d23:36117633\\n' , 'out' : '' , 'rc' : 0 } , 'ctrl2.localdomain' : { 'err' : '08a94e67-bae0-11e6-8239-9a6188749d23:36117633\\n' , 'out' : '' , 'rc' : 0 }}} On this example, UUID and SEQNO is shown for each controller. Running a check against remote hosts 1 2 3 4 5 6 # Prepare host list in ansible-style echo \"host1\" > hosts echo \"host2\" >> hostsfile # Run magui against them ./magui.py --hosts hostsfile Autogrouping Magui does check metadata for finding host roles or hostnames that should be checked together and generates additional json files for them. Plugin development for Magui Please do check for more details. Please if you have any idea on any improvements please do not hesitate to open an issue or submit your contributions.","tags":"tech","url":"https://citellusorg.github.io/magui/","loc":"https://citellusorg.github.io/magui/"},{"title":"About","text":"Table of contents What is Citellus? What's new? Who are we? Quick glance: Code status Citellus Nexus Citmetrics Get it! What is Citellus? Is a tool based on execution of simple ‘plugins' written in the language that is more convenient for you as long as it is based on some standard conventions. It is made with several parts working together: Citellus: The framework running the plugins and the plugins Nexus: The web Interface (optional) to have a centralized server Citmetrics: Additional tools to receive incoming metrics from executions (that will be merged with nexus in the future) Additional repos containing your plugins What's new? Check the entries that we're pushing to Citellus blog or subscribe to our feed. Check archives at Archives Check tags in posts at Tags Who are we? We're a group of technology enthusiasts working in different areas ranging from Consulting to Technical Support and Engineering that have come out with this tool for detecting known issues in systems to speed up the issue resolution process. Quick glance: Code status Citellus Nexus Citmetrics Get it! Just head to https://github.com/citellusorg/citellus/ and get the code!","tags":"tech","url":".","loc":"."},{"title":"Citellus GitHub Action","text":"GitHub Actions Github has recently included the ability to define ‘actions' or ‘workflows' to execute on the repositories. The pros: It's defined in a yaml inside the repository Allows defining secrets via the web UI for tokens, etc Extensive marketplace of actions and easily extensible Citellus and GHA We've moved some of the CI in the repository from Travis to GHA to take advantage of this approach so now (check .github/ folder): Package version upload (when a new release is created, package is uploaded to pypi ) Tagging of relevant versions (when X.Y.Z is released, new tags are added for X.Y and X pointing to the same files) Python unit testing pre-commit validation Broken link checker for documents Labeling of issues Closing old issues/ PR 's when not updated Generation of website for https://citellusorg.github.io Managing of dependencies for actions, packages etc The path to Citellus Github Action With the recent changes in Citellus What's new like the extra plugin tree and configuration path, we were already on the path to get more Citellus automation…. https://github.com/citellusorg/gh-action-citellus has been created for that purpose. It defines via the action.yml the steps to setup Citellus and via the entrypoint.sh install dependencies, sets up permissions and then runs Citellus against the defined folder to store the output and serve the report via GitHub pages web server. You can check one repository using it at https://github.com/iranzo/ipival/ and see the html output at https://iranzo.github.io/ipival/ . As it's always easier to learn by an example, check those files: .citellus.conf at https://github.com/iranzo/ipival/blob/master/.citellus.conf which defines the web output, excludes to rule out all the citellusclient plugins, defines title for the report and defines an extraplugintree in the subfolder of this repository. .github/workflows/citellus.yml at https://github.com/iranzo/ipival/blob/master/.github/workflows/citellus.yml which defines to run the action on each push to master branch, and also via daily cron execution, defining the following properties for the script (that will be used by the prior commented entrypoint.sh ): 1 2 3 4 5 - uses : citellusorg/gh-action-citellus@1.0 env : GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}} SOSREPORT : test CONFIGPATH : \"./\" Enjoy!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/08/18/github-action/","loc":"https://citellusorg.github.io/blog/2020/08/18/github-action/"},{"title":"Citellus: 3 year anniversary","text":"Time flies! Citellus has been now around for three years! On June 11th 2017 I have created this project for automating manual checks that I had to perform over and over again. It was very simple shell script that iterated over directories and executed shell scripts in them. Soon after that, friends, colleagues started to use the program as well and provided feedback. We have reached out for help to one of our colleague Lars and asked if he had any ideas he could share with us to improve the program. We have realized that current form of the program is very limiting and we wanted to improve. Pablo has created a completely new framework in python that was based on the same idea, but he identified the problems with the current and addressed them. There were lots of improvements, especially in execution of the scripts, we started with sequential run of the scripts and moved to parallel using python. After a while our colleagues from U.S. have noticed the program with the new improvements, but it wasn't great user experience to read the output from the CLI , especially as the number of plugins has grown to several hundreds. David Vallee Delisle, DVD created a dashboard that allowed to read the reports of the rules in the browser and greatly improved usability. Pablo continued working on the framework and forever improving it and adding more features, one of the big ones was M.A.G.U.I. that stands for Multiple Analysis Generic Unifier and Interpreter that allowed running Citellus on top of cluster of multiple nodes. For a while these two were separated programs, but we realised that M.A.G.U.I. brought benefits into Citellus and they both merged under Citellus. We have spent probably a thousand of hours or more of our free time that we have dedicated into writing this program and some of the internal rules or public. During all this time we have had contributors that came and went, and some are still contributing to the project. I would like to shout out to Mikel and his contribution and his time. The most important thing with this project is that even after three years, Citellus is still important. During this period we've enhanced Citellus to be integrated as described in the What's new documents. Happy birthday Citellus!!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/3year-anniversary/","loc":"https://citellusorg.github.io/blog/2020/06/11/3year-anniversary/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Citellus: 2 year anniversary","text":"Time flies! Today, Citellus makes the two years milestone. Last year we got this article on it. This year not a lot of changes happened compared to the last one: The amount of plugins have increased to 874 (counting internal ones) Updates to some plugins like lifecycle of new releases Our first Katacoda scenario on how to install and use it: How to use citellus Presentation on meetup Emerging Tech Valencia Thanks a lot for all your support during this period and counting on it for the years to come! Do contribute to get us to the next level! Happy birthday Citellus!!","tags":"blog","url":"https://citellusorg.github.io/blog/2019/06/11/2year-anniversary/","loc":"https://citellusorg.github.io/blog/2019/06/11/2year-anniversary/"},{"title":"Citellus 1.0.0 released!!","text":"During the las months citellus team has not found any big issues or functionality that could be missed and worked mostly on performance improvements and some other tests. It was a good timing to align a new year with official release of Citellus 1.0.0 . We've recently also embraced a new telegram chat for our users via https://t.me/citellusUG to contact our team and for driving further development and evolution. Join us in celebrating 2009 with a new full set of opportunities and challenges to rise up! Regards!","tags":"blog","url":"https://citellusorg.github.io/blog/2019/01/01/citellus-v1.0.0/","loc":"https://citellusorg.github.io/blog/2019/01/01/citellus-v1.0.0/"},{"title":"Telegram channel","text":"Hey!, we've just started a telegram channel for Citellus users at https://t.me/citellusUG in addition to our FreeNode IRC channel #citellus. Stop by and share your feedback! The Citellus team.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/12/21/telegram-channel/","loc":"https://citellusorg.github.io/blog/2018/12/21/telegram-channel/"},{"title":"Citellus: Your system at a glance","text":"What's new? Other posts in this category: What's new System information summary Thanks to the suggestion of a colleague, we've added ‘sysinfo' as a ‘profile'. The idea of this, together with the RC_INFO code introduced is to leverage some scripts that report information relevant to the system being analyzed, that might or not be a problem, but still gives you context information about what you're trying to diagnose. Based on this, and by adjusting sysinfo.txt profile, for example to create a sysinfo-openstack.txt or a sysinfo-openshift.txt and its include/exclude filters for keywords, different set of tables could be created for relevant information for diagnosis/interpretation of failed/skipped/okay tests. Have a look on how it might look like based on current Gerrit reviews : And for example, for OSP : Enjoy and contribute the System information you'll like to see! The Citellus team.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/08/24/your-system-at-a-glance/","loc":"https://citellusorg.github.io/blog/2018/08/24/your-system-at-a-glance/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Citellus: 1 year anniversary","text":"Time flies! When you look back in time, some dates are more important than others because of what they bring to memory, for us Sun Jun 11 12:45:38 2017 +0200 is a special date… One year ago, this commit https://github.com/citellusorg/citellus/commit/fd5e56fbd946ba12aaef5e3776c341c4eab6b882 from Robin, demonstrated our commitment to make issue diagnostics faster and easier by putting automation and Citellus was born. Since then, lot of new things happened : Framework rewritten in python, parallelism, filters, etc Code review, Unit testing Extra contributors joined the project: https://github.com/citellusorg/citellus/graphs/contributors Web Interface More than 670+ plugins Presented on some public and also internal events that demonstrated the low-entry barrier on getting things detected. DevConf.cz 2018 : Recording SuperSec 2018 etc. etc Want some numbers? 1507 commits 480 issues (enhancements, etc) closed 28 contributors 54 ‘stars' on repo Thanks a lot for all your support during this period and counting on it for the years to come! Do contribute to get us to the next level! Happy birthday Citellus!!","tags":"blog","url":"https://citellusorg.github.io/blog/2018/06/11/1year-anniversary/","loc":"https://citellusorg.github.io/blog/2018/06/11/1year-anniversary/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus at SuperSec 2018!","text":"Citellus at SuperSec 2018!! We're pleased to announce that Citellus will be present in Almería, Spain during 12-13 May SuperSec congress. Supersec focuses on Secure development of software and there, Citellus has something to say… Citellus as you know is valid for validating that a deployed system is safe against known issues at any level: configuration, package versioning, security, etc Recently we've also extended Citellus to better behave with not only Red Hat ecosystem of products, but also expanded to increase tests on: Red Hat based distributions (CentOS, Fedora) RDO : (Upstream for Red Hat OpenStack) Debian: initial support for package checking A colleague has also been testing on top of Arch Linux We wish to see you there and get you onboard!","tags":"blog","url":"https://citellusorg.github.io/blog/2018/04/16/supersec/","loc":"https://citellusorg.github.io/blog/2018/04/16/supersec/"},{"title":"200 plugins!!","text":"New milestone 200 plugins! Hi During this weekend we've added some pending reviews and closed some issues that bumped current plugin number to 200. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 bugzilla : 20 [ 'docker: 1' , 'httpd: 1' , 'openstack/ceilometer: 1' , 'openstack/ceph: 1' , 'openstack/httpd: 1' , 'openstack/keystone: 1' , 'openstack/keystone/templates: 1' , 'openstack/neutron: 5' , 'openstack/nova: 4' , 'openstack/swift: 1' , 'openstack/tripleo: 2' , 'systemd: 1' ] ceph : 3 [] cluster : 1 [] docker : 1 [] httpd : 1 [] launchpad : 1 [ 'openstack/keystone: 1' ] negative : 2 [ 'system: 1' , 'system/iscsi: 1' ] network : 2 [] openshift : 2 [ 'etcd: 1' , 'node: 1' ] openstack : 69 [ 'ceilometer: 2' , 'ceph: 1' , 'cinder: 3' , 'containers: 4' , 'containers/docker: 2' , 'containers/rabbitmq: 1' , 'crontab: 3' , 'glance: 1' , 'haproxy: 2' , 'hardware: 1' , 'iptables: 1' , 'keystone: 3' , 'mysql: 8' , 'network: 4' , 'neutron: 2' , 'nova: 10' , 'openvswitch: 2' , 'pacemaker: 1' , 'rabbitmq: 5' , 'redis: 1' , 'swift: 3' , 'system: 2' , 'systemd: 1' ] pacemaker : 10 [] positive : 19 [ 'cluster/cman: 1' , 'openstack: 16' , 'openstack/ceilometer: 1' , 'system: 1' ] security : 12 [ 'meltdown: 2' , 'spectre: 8' ] supportability : 2 [] system : 54 [ 'iscsi: 1' ] virtualization : 1 [] ------- total : 200 Each plugin does enable at least one test performed against your system or sosreport that ease the issue detection task or provide proactive data before an issue affects it! Come and help us CONTRIBUTING to extend that number more!","tags":"blog","url":"https://citellusorg.github.io/blog/2018/04/15/200-plugins/","loc":"https://citellusorg.github.io/blog/2018/04/15/200-plugins/"},{"title":"New home!","text":"New home! We've just created this page for hosting the project at http://citellusorg.github.io Thanks for visiting!","tags":"blog","url":"https://citellusorg.github.io/blog/2018/04/10/newpage/","loc":"https://citellusorg.github.io/blog/2018/04/10/newpage/"},{"title":"Citellus at DevConf.cz 2018!","text":"Citellus at DevConf.cz 2018!! Citellus had a slot during DevConf.cz 2018 held in Brno, CZ https://devconfcz2018.sched.com/event/ DJXG /detect-pitfalls-of-osp-deployments-with-citellus If you were unable to attend, bear in mind that there's a recording available at https://www.youtube.com/watch?v=SDzzqrUdn5A Slides used are available at https://github.com/citellusorg/citellus/blob/master/doc/devconfcz2018-presentation-revealmd.md Regards!","tags":"blog","url":"https://citellusorg.github.io/blog/2018/01/27/DevConf.cz/","loc":"https://citellusorg.github.io/blog/2018/01/27/DevConf.cz/"},{"title":"Recent changes in Magui and Citellus","text":"Table of contents What's new? Citellus Magui Wrap up! What's new? During recent weeks we've been coding and performing several changes to Citellus and Magui . Checking the latest logs or list of issues open and closed on github is probably not an easy task or the best way to get ‘up-to-date' with changes, so I'll try to compile a few here. First of all, we're going to present it at Devconf.cz 2018 , so come stop-by if assisting :-) Some of the changes include… Citellus New functions for bash scripts! We've created lot of functions to check different things: installed rpm rpm over specific version compare dates over X days regexp in file etc.. Functions do allow to do quicker plugin development. save/restore options so they can be loaded automatically for each execution Think of enabled filters, excluded, etc metadata added for plugins and returned as dictionary plugin has a unique ID for all installations based on plugin relative path and plugin name We do use that ID in magui to select the plugin data we'll be acting on plugin priority! Plugins are assigned a number between 0 and 1000 that represents how likely it's going to affect your environment, and you can filter also on it with --prio extended via ‘extensions' to provide support for other plugins moved prior plugins to be core extension ansible playbook support via ansible-playbook command metadata plugins that just generate metadata (hostname, date for sosreport, etc) Web Interface!! David Valee Delisle did a great job on preparing an html that loads citellus.json and shows it graphically. Thanks to his work, we did extended some other features like priority, categories, etc that are calculated via citellus and consumed via citellus-www. Interface can also load magui.json (with ?json=magui.json ) and show it's output. We did extend citellus to take --web to automatically create the json named citellus.json on the folder specified with -o and copy the citellus.html file there. So if you provide sosreports over http, you can point to citellus.html to see graphical status! (check latest image at citellus website as www.png ) Increased plugin count! Now we do have more than 119 across different categories A new plugin in python reboot.py that checks for unexpected reboots Spectre/Meltdown security checks! Magui If there's an existing citellus.json magui does load it to speed it up process across multiple sosreports. Magui can also use ansible-playbook to copy citellus program to remote host and run there the command, and bring back the generated citellus.json so you can quickly run citellus across several hosts without having to manually perform operations or generate sosreports. Moved prior data to two plugins: citellus-outputs Citellus plugins output arranged by plugin and sosreport citellus-metadata Outputs metadata gathered by metadata plugins in citellus arranged by plugin and sosreport First plugins that compare data received from citellus on global level Plugins are written in python and use each plugin id to just work on the data they know how to process pipeline-yaml Checks if pipeline.yaml and warns if is different across hosts seqno Checks latest galera seqno on hosts release Reports RHEL release across hosts and warns if is different across hosts Enable quiet mode on the data received from citellus as well as local plugins, so only outputs with ERROR or different output on sosreports is shown, even on magui plugins. Wrap up! As you can see we've been busy trying to improve plugins, Citellus framework and Magui as well. We've been also busy demonstrating to others it's value and raising lot of new issues and closing them with our commits (294 requests closed so far). So, come and tell us what else are you missing or how can we improve it to suit your needs (or code them yourself and submit a review!)","tags":"blog","url":"https://citellusorg.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/","loc":"https://citellusorg.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Recent changes in Magui and Citellus","text":"What's new? Our previous edition of What's new was stored externally at https://iranzo.github.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/ , so we've copied to this website for completeness (now locally at: Whats new ) What has happened since then? We're presenting at SuperSec 2018 in Almería, Spain SuperSec 2018 Up to 217 plugins as of today Lot of code changes Some of the changes include… General New domain: https://citellusorg.github.io and new URL for repos https://github.com/citellusorg/ Updated presentation files SuperSec 2018 General one Functions: Move functions like expanding ranges to common function set is_filemode and is_required_filemode to check access permissions POT generation update to allow duplicate message id's Framework (citellus and magui) Python optimizations Removed duplicated code Declare variables to remove to reduce memory footprint On magui, save earlier instead of running twice (with lot of sosreports it was an issue) Limit magui checks by default to 10 sosreports at the same time or exit Use absolute paths internally when working on sosreports Autogroups Magui does now check possible groups based on metadata to compare sosreports between them in addition to ‘all against all' to highlight issues that affect ‘controllers', or ‘computers', or host UUID across sosreports. In Live mode, just run plugins that pass filter Progress bars for each plugin Split Faraday results into individual plugins, so each interface/device appears ‘paired' across sosreports MTU Multipath count WWW Hide ‘out' that should be always empty Fix results not showing when Regexp started with capital leter New plugins (now 217!! ) General move some awk to grep + awk to provide faster results with large files Fix some checks on RHEL6 + Debian + Arch Linux Some plugins networks without available ip's nova failing to migrate NUMA recommendations for NFV deployments with OpenStack Report number of paths in each sosreport and warn if different across them (magui) DHCP agents per network equal to number of controllers Mongodb and mysql size reporting (for when sosreport includes the required files) Sudoers ‘includedir' entry missing in /etc/sudoers (indirectly via vdsm logs) Libvirt migration bug system libs overloaded non ASCII chars in limits.conf detect multipath enabled and not running Detect packages and modules to be deprecated after RHEL 7.5 next major release Check HAProxy status Check SSL Errors in HAProxy Check neutron ports in no namespace Check DC_Version for pacemaker across hosts Freeradius incompatible regex systemd unit not found systemd ordering cycle systemd sysv generator failed Kernel taint decoder extra baremetal detection kdump checker usbfs closed correctly by app usb over current neutron dead agents OCP : Check network manager Chronyd: Number of chronyd servers Pacemaker nodes in standby etc.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/05/08/whatsnew/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"},{"title":"Citellus: What's new? 2019-08-16","text":"What's new? Other posts in this category: What's new General Improve handling of dates forcing LC_ALL Create a new function (thanks Mikel) to take from an ordered list of files the first_file_available and exits (because sometimes, depending on sosreport version it might have one file or another). Patternfly was updated to latest minor Other changes made to is_active and is_enabled Functions that were later enhanced to use first_file_available Test to detect issues with LEAPP in-place upgrade for EL7 -> EL8 if / and /var are on different device.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/08/16/whatsnew/"},{"title":"Citellus: What's new? 2020-06-11","text":"What's new? Other posts in this category: What's new General Extra plugin tree support: allows to specify alternate plugin tree (in addition to internal one) so that Citellus can be integrated more easily with other solutions (for example, excluding citellusclient plugins and just listing the ones in the additional folder) Some minor fixes in documentation and plugins New logo!","tags":"blog","url":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/","loc":"https://citellusorg.github.io/blog/2020/06/11/whatsnew/"},{"title":"Citellus: What's new? 2018-07-08","text":"What's new? Other posts in this category: What's new General anonymizaton We've moved this to an independent function and updated the ‘—call-home ‘ to use this function (but leaving sosreport path), so that the results can be aggregated later for checking trends on rules detecting issues, etc. metrics As part of above change, we've started a small spinoff that we want to integrate back into Nexus on grabbing metrics of execution we can later analyze. Code is very simple and it's just a simple receiving HTTP POST server that stores the json on disk for later analysis. Note: Metrics are enabled on demand by setting the --call-home parameter to YOUR server uri.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/08/whatsnew/"},{"title":"Citellus: What's new? 2018-07-02","text":"What's new? Other posts in this category: What's new General RC_INFO We had discussions in the past about info that we could provide that was not really a Error . After some extra feedback we did add the RC_INFO exit code to the tests, so that for example xsos output is also provided with citellus results so that it can be quickly checked also from the Web UI overrides.json Allows to override fields in the results json with some values, for example to force updates of the titles, urls, etc in the results returned. --anon Allows to anonymize results by removing contents of err and out fields in citellus.json so that it doesn't leak any information. rhv-log-collector-analyzer-live support. Citellus now does report on live executions the information reported from rhv-log-collector-analizer-live --json thanks to the great work done by Douglas Landgraf. Since commit 9505c0cca15c5d55cdf5dbd7b5a1e271f03f7234 we've removed plugins that were previously made available as we were requested.","tags":"blog","url":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/","loc":"https://citellusorg.github.io/blog/2018/07/02/whatsnew/"},{"title":"Citellus: What's new? 2019-09-13","text":"What's new? Other posts in this category: What's new General Pie charts are now shown for profile reports, showing one ‘piece' for each status of plugins reported, check www preview for a sample.","tags":"blog","url":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/","loc":"https://citellusorg.github.io/blog/2019/09/13/whatsnew/"}]};